{"ast":null,"code":"var _jsxFileName = \"h:\\\\streamlit_mindmap\\\\component-template\\\\template\\\\my_component\\\\frontend\\\\src\\\\MultiPurposeNode.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiPurposeNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-node\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = MultiPurposeNode;\nexport default MultiPurposeNode;\nvar _c;\n$RefreshReg$(_c, \"MultiPurposeNode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MultiPurposeNode","data","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["h:/streamlit_mindmap/component-template/template/my_component/frontend/src/MultiPurposeNode.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Handle, Position } from 'reactflow';\r\n\r\ninterface NodeData {\r\n  label: string;\r\n}\r\nconst MultiPurposeNode: React.FC<{ data: NodeData }> = ({ data }) => {\r\n  return (\r\n    <div className=\"custom-node\">\r\n      {/* Node content */}\r\n      <div>{data.label}</div>\r\n      \r\n      {/* Handles that can both take and emit edges */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiPurposeNode;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,gBAA8C,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnE,oBACEF,OAAA;IAAKG,SAAS,EAAC,aAAa;IAAAC,QAAA,eAE1BJ,OAAA;MAAAI,QAAA,EAAMF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIpB,CAAC;AAEV,CAAC;AAACC,EAAA,GAVIT,gBAA8C;AAYpD,eAAeA,gBAAgB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}